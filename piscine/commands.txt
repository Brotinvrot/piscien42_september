
		touch (name of file).txt 		# Создать файл с именем (тип файла можно указать сразу или нет) 

		mkdir dir						# Создать папку с именем dir

		rm (название файла)				# удаление файла 	

		mv (name of file) (new name) 	# Изменение названия файлов и директорий

		mv (file name) (dest_dir)/      # Перемещение файлов или папок

------------------------


		echo (название файла)			# Вывести текст на экран

		echo "TEXT" > file.txt			# Добавить текст в файл
							  			(перенаправить поток вывода в файл)

		echo "Text" >> (name file)		# Два знака >> добавляют в файл то что в кавычках а если 
					  					поставить толко один знак > то будет очищен весь файл и 
					  					записано только то что в кавычках

------------------------
Базовые комманды Linux - ### BASE LINUX COMMANDS

		cd name_of_dir					# Зайти в папку с именем name_of_dir

		cd ..							# Переместиться в предыдущую дирректорию

		ls								# Проверить список файлов в папке

		cat read.txt					# Прочитать файл с именем read.txt
	

------------------------
работа с гитом - ### GITHUB


		git add file.md					# Добавить файл в буфер
	
		git status						# Проверить текущий статус

		git commit -m 'comment'			# Сделать коммит и выгрузить файл из буфера папки

		git push						# Выгрузить на гитхаб

		git rm (name file) 				# удаление файла из гита
		
		git restore (name file)			# Восстановление удалённого файла  
------------------------
#АРХИВ#

		@> tar -cf (new name of archiv).tar (name of file) # упаковка файла в архив и
		@> tar -cf testDay00.tar testDay00

		@> tar -xf (name archiv) 		# Распаковак Архива
		@> tar -xf testDay00.tar		# Example 
		 
		------------------------
		# Экранирование

			@> echo "ls -p -t | tr '\\\n' ','" > midLS  # Экранирование переноса строки двумя слешами "\\"

------------------------
# ПОТОКИ ВЫВОДА ПРИ ОБРАБОТКЕ ТЕКСТА
  И ЗАПИСИ ФАЙЛОВ 
	
		### EXAMPLE 1

			@>  cat b | tr -d "$" > b

				- При такой конструкции, утилита tr правильно
				форматирует содержимое файла b, но перезапись
				закончится неуспешно и содержимое файла b будет пустым   


		### EXAMPLE 2

			@>	cat b | tr -d "$" >> b 
				
				- При такой конструкции, утилита tr правильно
				форматирует содержимое файла b, и перезапись
				закончится успешно, но содержимое файла b 
				дозапишется и результат будет неправильным    


		### EXAMPLE 3 ......... IS VALID VARIAN !!!!!


			@>  cat b | tr -d "$" > a

				- Данный вариант является правильным подходом, так как
				используются два разных файла, обрабатываем вывод файла
				b и записываем результат в a

------------------------
### MAGIC FILE AND HEXEDIT WHEN WORKING WITH BYTECODE



		# РАБОТА С БАЙТКОДОМ - HEXEDIT 

			@> hexedit filename

				CTRL+X		# SAVE file    # сохранить файл 
				ESC+T		# TRUNCED file # обрезать до текущего байта

		# МАГИЧЕСКИЕ ФАЙЛЫ - файлы формата для определения типа файлов

			- По умолчанию файлы формата проверяются из папки /etc/magic 
			в разных системах по-разному 

				@> file (filename) 
					
					ASCII TEXT 


			- Есть возможность создавать свои MAGIC файлы

				42 string 42 magic 42 number found`
				└┬┘└─┬──┘ └──┬───┘ └──────┬──────┘
				 │   │       │            └─── Message
				 │   │       └──────────────── Test
				 │   └──────────────────────── Type
				 └──────────────────────────── Offset

			- Если создать файл и поместить в 42 байт
			строку 42, как из примера выше, то утилита file 
			с использованием пользовательского magic file
			выведет строку: 
					
					42 number found

					@> file -m [your_magic_file] [filename]

						42 number found


			- Иначе, если не удовлетворяет условиям

					@> file -m [your_magic_file] [filename]

						 data, ASCII-text, empty.... e.t.c 


--------------------------------
Локальные переменные (Lockal Variables) 

	### LOCAL VARIABLES
		
		- Обьявлять локальные переменные можно двумя способами

			1)
				@> export FT_USER="username"

			2)
				@> FT_USER="username"


		- Получить значение переменной через $

			@> echo $FT_USER 
					
				"username"

			@> cat $FT_USERNAME

				file with name username not found 




	### GROUPS 
		
		- Команда groups выводит в Терминал группы по имени пользователя
			
			@> groups				# По умолчанию выводит группы для текущего пользователя

			@> groups (username)	# Вывод групп для указанного username


		- Совместное использование groups with localVar

			@> groups $FT_USER 		# groups username
				
				adm bin ...
				

		- Что бы скорректировать вывод с запятыми можно использовать
		такую комбинацию команд:

				groups "username" | tr " " ","

					adm, bin, ...


---------------
HARD SCRIPTS FORMATTED_OUTPUT
(СЛОЖНЫЕ СКРИПТЫ ФОРМАТИРОВАНИЕ ВЫВОДА)

	### SEARCH FILE WITH .SH 
	
		- Задача скрипта находить файлы с расширением .sh и выводить только 
		назвние данных файлов без расширения и без начального пути
			
			TASK - ЗАДАНИЕ 
		 	--------------

			FROM THIS	- dir/file_sh.sh 
			
			TO THIS		- file_sh
			
			# РЕШЕНИЕ 1

				@> find . -type f  -name "*.sh" | rev |cut -d '/' -f 1 | rev | cut -d '.' -f 1
			
					file5
					file7
					file8
					file 			# difference with 2 
					file_sh

				# Данный скрипт не обрабатывет единственную ситуацию, где файл
				имеет название:
				
					IF FILENAME: file.6.sh 

					THEN:		 file

			# РЕШЕНИЕ 2 

				@> find . -type f -name "*.sh" | sed 's/...$//' | rev | cut -d "/" -f 1 | rev

					file5
					file7
					file8
					file.6			# difference with 1 
					file_sh


				# Вышеприведенный скрипт выполняет свою задачу правильно и
				отрезает расширение файла .sh, не затрагивая другой формат
				записи с точкой

		### COUNT DIR IN CURRENT PATH 

			- Подсчитать кол-во дирректорий и файлов, в текущем каталоге
			и подкаталогах, не учитивая текущий путь

				@> find . -type d -o type f | sed '1d' | wc -l 


					# sed '1d' - удалить первую строку

		### PRINT MACHINE MAC

			- Вывести MAC-адрес сетевых интерфейсов

				@> ifconfig | grep  ether | sed 's/ether//' | tr -d ' \t' | cut -c1-17
					
					50:b7:c3:2c:c1:3b

----------------
** FILES ACCESS PERMISSION - ПРАВА ДОСТУПА К ФАЙЛАМ 


	### CHMOD

		- Утилита chmod предназначенна для изменения прав доступа
		к файлам 

			@> ls -l 

				-rwxrwxrwx # такой формат записи используется для файлов


		- Чтобы изменить права доступа к файлу при помощи утилиты chmod
		используем 

			@> chmod ugo+rwx filename # + добавляет права
	
				-rwxrwxrwx 

			@> chmod ugo-rwx filename # - забирает права

				----------


		- Также имеется возможность изменять права только
		для пользователей, групп и остальных по-отдельности 
	
			# ЗАБРАТЬ ПРАВА
				
				СТАРТОВЫЕ ПРАВА: -rwxrwxrwx
			
					@> chmod u-rwx filename

						----rwxrwx

					@> chmod g-rwx filename

						-rwx---rwx

					@> chmod o-rwx filename 

						-------rwx

			# ДАТЬ ПРАВА
				
				СТАРТОВЫЕ ПРАВА: ----------

					@> chmod u+rwx filename

						-rwx------

					@> chmod g+rwx filename

						----rwx---

					@> chmod o+rwx filename 


						-------rwx

		- Изменять можно как и отдельные права
		так и для групп пользователей по-отдельности

			СТАРТОВЫЕ ПРАВА: ----------

			@> chmod uo+rw filename

				-rw----rw-

			

				
		









