
		touch (name of file).txt 		# Создать файл с именем (тип файла можно указать сразу или нет) 

		mkdir dir						# Создать папку с именем dir

		rm (название файла)				# удаление файла 	

		mv (name of file) (new name) 	# Изменение названия файлов и директорий

		mv (file name) (dest_dir)/      # Перемещение файлов или папок

------------------------


		echo (название файла)			# Вывести текст на экран

		echo "TEXT" > file.txt			# Добавить текст в файл
							  			(перенаправить поток вывода в файл)

		echo "Text" >> (name file)		# Два знака >> добавляют в файл то что в кавычках а если 
					  					поставить толко один знак > то будет очищен весь файл и 
					  					записано только то что в кавычках

------------------------
Базовые комманды Linux - ### BASE LINUX COMMANDS

		cd name_of_dir					# Зайти в папку с именем name_of_dir

		cd ..							# Переместиться в предыдущую дирректорию

		ls								# Проверить список файлов в папке

		cat read.txt					# Прочитать файл с именем read.txt
	

------------------------
работа с гитом - ### GITHUB


		git add file.md					# Добавить файл в буфер

		git status						# Проверить текущий статус

		git commit -m 'comment'			# Сделать коммит и выгрузить файл из буфера папки

		git push						# Выгрузить на гитхаб

		git rm (name file) 				# удаление файла из гита

------------------------
#АРХИВ#

		@> tar -cf (new name of archiv).tar (name of file) # упаковка файла в архив и
		@> tar -cf testDay00.tar testDay00

		@> tar -xf (name archiv) 		# Распаковак Архива
		@> tar -xf testDay00.tar		# Example 
		 
		------------------------
		# Экранирование

			@> echo "ls -p -t | tr '\\\n' ','" > midLS  # Экранирование переноса строки двумя слешами "\\"

------------------------
# ПОТОКИ ВЫВОДА ПРИ ОБРАБОТКЕ ТЕКСТА
  И ЗАПИСИ ФАЙЛОВ 
	
		### EXAMPLE 1

			@>  cat b | tr -d "$" > b

				- При такой конструкции, утилита tr правильно
				форматирует содержимое файла b, но перезапись
				закончится неуспешно и содержимое файла b будет пустым   


		### EXAMPLE 2

			@>	cat b | tr -d "$" >> b 
				
				- При такой конструкции, утилита tr правильно
				форматирует содержимое файла b, и перезапись
				закончится успешно, но содержимое файла b 
				дозапишется и результат будет неправильным    


		### EXAMPLE 3 ......... IS VALID VARIAN !!!!!


			@>  cat b | tr -d "$" > a

				- Данный вариант является правильным подходом, так как
				используются два разных файла, обрабатываем вывод файла
				b и записываем результат в a

------------------------
### MAGIC FILE AND HEXEDIT WHEN WORKING WITH BYTECODE



		# РАБОТА С БАЙТКОДОМ - HEXEDIT 

			@> hexedit filename

				CTRL+X		# SAVE file    # сохранить файл 
				ESC+T		# TRUNCED file # обрезать до текущего байта

		# МАГИЧЕСКИЕ ФАЙЛЫ - файлы формата для определения типа файлов

			- По умолчанию файлы формата проверяются из папки /etc/magic 
			в разных системах по-разному 

				@> file (filename) 
					
					ASCII TEXT 


			- Есть возможность создавать свои MAGIC файлы

				42 string 42 magic 42 number found`
				└┬┘└─┬──┘ └──┬───┘ └──────┬──────┘
				 │   │       │            └─── Message
				 │   │       └──────────────── Test
				 │   └──────────────────────── Type
				 └──────────────────────────── Offset

			- Если создать файл и поместить в 42 байт
			строку 42, как из примера выше, то утилита file 
			с использованием пользовательского magic file
			выведет строку: 
					
					42 number found

					@> file -m [your_magic_file] [filename]

						42 number found


			- Иначе, если не удовлетворяет условиям

					@> file -m [your_magic_file] [filename]

						 data, ASCII-text, empty.... e.t.c 



